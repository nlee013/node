
//1.스타벅스 정보를 저장하는 함수
var add = function(req,res){
	
	console.log("add함수 호출");
	
	var name = req.body.name;
	var addr = req.body.addr;
	var tel = req.body.tel;
	var longitude = req.body.longitude;
	var latitude = req.body.latitude;
	
	var database = req.app.get("database");
	
	if(database){
		
		addCoffeeShop(database, name, addr, tel, longitude, latitude, function(err,result){
			
			if(err){
				
				res.writeHead("200",{"Content-Type":"text/html;charset=utf-8"});
				res.write("<meta name='viewport' content='width=device-width," + 
				"height=device-height,initial-scale=1'>");
				res.write("<h2>스타벅스 추가중 에러 발생</h2>");
				res.end();
				
				return;
				
			}
			
			if(result){
				
				res.writeHead("200",{"Content-Type":"text/html;charset=utf-8"});
				res.write("<meta name='viewport' content='width=device-width," + 
						"height=device-height,initial-scale=1'>");
				res.write("<h2>스타벅스 추가 성공</h2>");
				res.end();
				
				
			}else{
				
				res.writeHead("200",{"Content-Type":"text/html;charset=utf-8"});
				res.write("<meta name='viewport' content='width=device-width," + 
						"height=device-height,initial-scale=1'>");
				res.write("<h2>스타벅스 추가 실패</h2>");
				res.end();
				
			}
			
		});
		
	}else{
		
		res.writeHead("200",{"Content-Type":"text/html;charset=utf-8"});
		res.write("<meta name='viewport' content='width=device-width," + 
				"height=device-height,initial-scale=1'>");
		res.write("<h2>데이터베이스 연결 실패</h2>");
		res.end();
		
	}
	
};

//2.스타벅스 정보를 조회하는 함수(저장?)
var list = function(req,res){
	
	console.log("list함수 호출됨");
	
	var database = req.app.get("database");
	
	if(database){
		
		database.CoffeeShopModel.findAll(function(err,result){
			
			if(err){
				
				res.writeHead("200",{"Content-Type":"text/html;charset=utf-8"});
				res.write("<meta name='viewport' content='width=device-width," + 
						"height=device-height,initial-scale=1'>");
				res.write("<h2>스타벅스 리스트 조회중 에러 발생</h2>");
				res.end();
				
				return;
				
			}
			
			if(result){
				
				res.writeHead("200",{"Content-Type":"text/html;charset=utf-8"});
				res.write("<meta name='viewport' content='width=device-width," + 
						"height=device-height,initial-scale=1'>");
				res.write("<h2>스타벅스 리스트</h2>");
				res.write("<div><ul>");
				
				for(var i=0;i<result.length;i++){
					
					var curName = result[i]._doc.name;
					var curAddr = result[i]._doc.addr;
					var curTel = result[i]._doc.tel;
					var curLongitude = result[i]._doc.geometry.coordinates[0];//경도
					var curLatitude = result[i]._doc.geometry.coordinates[1];//위도
					
					res.write("<li>#" + (i+1) + " : " +
							curName + ", " +
							curAddr + ", " +
							curTel + ", " +
							curLongitude + ", " +
							curLatitude + "</li>");
					
				}
				
				res.write("</ul></div>");
				res.end();
				
			}else{
				
				res.writeHead("200",{"Content-Type":"text/html;charset=utf-8"});
				res.write("<meta name='viewport' content='width=device-width," + 
						"height=device-height,initial-scale=1'>");
				res.write("<h2>스타벅스 리스트 조회 실패</h2>");
				res.end();			
				
			}
			
		});
		
	}else{
		
		res.writeHead("200",{"Content-Type":"text/html;charset=utf-8"});
		res.write("<meta name='viewport' content='width=device-width," + 
				"height=device-height,initial-scale=1'>");
		res.write("<h2>데이터베이스 연결 실패</h2>");
		res.end();
		
	}
	
};


//추가함수(내가 실제로 추가하는 함수)
var addCoffeeShop = function(database,name,addr,tel,longitude,latitude,callback){
	
	console.log("addCoffeeShop 호출됨");
	
	//CoffeeShopModel 객체 생성
	var coffeeShop = new database.CoffeeShopModel({
			name:name,addr:addr,tel:tel,
				geometry:{
					type:"Point",
					coordinates:[longitude,latitude]
				}
			}
		);
	
	//save()로 저장
	coffeeShop.save(function(err){
		
		if(err){
			callback(err,null);
			return;
		}
		
		console.log("스타벅스 데이터 추가됨");
		
		callback(null,coffeeShop);
		
	});
}

//함수
var findNear = function(req, res) {
	
	console.log("findNear 함수 호출된다..");
	
	var maxDistance = 100;//10은 10m , 100은 1km
	
	var longitude = req.body.longitude;
	
	var latitude = req.body.latitude;
	
	var database = req.app.get("database");
	
	if(database){
		
		database.CoffeeShopModel.findNear(longitude, latitude, maxDistance, function(err, result) {
			
		});
	}
}

module.exports.add = add;
module.exports.list = list;


