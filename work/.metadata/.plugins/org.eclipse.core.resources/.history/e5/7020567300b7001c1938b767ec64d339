/*
	<모듈설치>
	사용자 인증처리 필수 모듈
	npm install passport --save
	npm install passport-kakao --save
	npm install passport-facebook --save	

	로컬인증기능(사용자 입력 정보와 DB정보 비교)	
	npm install passport-local --save	

	요청객체에 메세지를 넣어둘수있는 기능
	다른 함수나,뷰템플릿 처리 함수에 메세지 전달
	사용자에게 메세지 전달
	npm install connect-flash --save
-------------------------------------------------------------
  패스포트는 수백가지 인증방식(Strategy)을 제공 하는데 
  어떤 인증 방식을 사용할지 Strategy를 선택
  Local Strategy, Facebook Strategy, Google Strategy..
  
  * 대표적 인증 방식
  로컬 인증: 데이터베이스에 저장된 사용자 정보와 비교
  OAuth 인증: 페이스북이나 트위터계정 사용
*/


//Express 기본 모듈
require("dotenv").config();
var express = require("express");
var http = require("http");
var path = require("path");
var serveStatic = require("serve-static");
var expressErrorHandler = require("express-error-handler");
var expressSession = require("express-session");

//-database.js에 맨 위에 import 했기에 여기서 필요없다
//var mongoose = require("mongoose");
var user = require("./router/user"); 
var config = require("./config");

//추가
var routerLoader = require("./router/routerLoader");

//추가
var database = require("./database/database");

//익스프레스 객체 생성
var app = express();

//뷰엔진 설정-----------------------------------------------------------추가(22/04/07)
app.set("views", __dirname + "/views");
/*app.set("view engine", "ejs");
console.log("뷰엔진이 ejs로 설정 되었습니다.");*/

app.set("view engine", "jade");
console.log("뷰엔진이 jade로 설정 되었습니다.");

app.set("port",process.env.PORT||config.serverPort);

app.use(express.urlencoded({extended:false}));

app.use("/public1",serveStatic(path.join(__dirname,"public1")));//왼쪽은 가상, 오른쪽은 실제주소

app.use(expressSession({
	
	secret:"my key",
	resave:true,
	saveUninitialized:true
	
}));


//--------------------------------------------------------
//라우터 객체 생성
var router = express.Router();

routerLoader.init(app, router);//오류나는 경우는 아래처럼 사용

//routerLoader.init(app,  express.Router());--위에 var router = express.Router();  주석처리 후 사용(직접 넣어주기)


//-------------------------------------------------------추가

var errorHandler = expressErrorHandler({
	
	static: {
		"404":"./public1/404.html"
	}
	
});

app.use(expressErrorHandler.httpError(404));
app.use(errorHandler);


//Express 서버 시작
//var host = localhost;--ip로 접근
http.createServer(app).listen(app.get("port"),function(){
	
	console.log("익스프레스 서버를 시작했습니다: " + app.get("port"));
	
	//DB연결 함수 호출
	database.init(app, config);//app, confg-매개변수, init-변수
	
});












